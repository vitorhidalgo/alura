{"version":3,"sources":["../../app-es6/services/ConnectionFactory.js"],"names":["stores","version","dbname","connection","close","ConnectionFactory","Error","Promise","resolve","reject","openRequest","window","indexedDB","open","onupgradeneeded","_createStores","e","target","result","onsuccess","bind","onerror","console","log","error","name","p_connection","forEach","objectStoreNames","contains","store","deleteObjectStore","createObjectStore","autoIncrement"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAMA,S,GAAW,CAAC,aAAD,C;AACXC,U,GAAW,C;AACXC,S,GAAW,Y;AAEbC,a,GAAa,I;AACbC,Q,GAAa,I;;gCAEJC,iB;AAEZ,iCACA;AAAA;;AACC,WAAM,IAAIC,KAAJ,CAAU,sDAAV,CAAN;AACA;;;;qCAGD;AACC,aAAO,IAAIC,OAAJ,CAEN,UAACC,OAAD,EAAUC,MAAV,EACA;AACC,WAAIC,cAAcC,OAAOC,SAAP,CAAiBC,IAAjB,CAAsBX,MAAtB,EAA8BD,OAA9B,CAAlB;;AAEAS,mBAAYI,eAAZ,GAA8B,aAC9B;AACCT,0BAAkBU,aAAlB,CAAiCC,EAAEC,MAAF,CAASC,MAA1C;AACA,QAHD;;AAKAR,mBAAYS,SAAZ,GAAwB,aACxB;AACC,YAAI,CAAChB,UAAL,EACA;AACCA,sBAAaa,EAAEC,MAAF,CAASC,MAAtB;AACAd,iBAAQD,WAAWC,KAAX,CAAiBgB,IAAjB,CAAsBjB,UAAtB,CAAR;AACAA,oBAAWC,KAAX,GAAmB,YACnB;AACC,gBAAM,IAAIE,KAAJ,CAAU,6CAAV,CAAN;AACA,UAHD;AAIA;AACDE,gBAAQL,UAAR;AACA,QAZD;;AAcAO,mBAAYW,OAAZ,GAAsB,aACtB;AACCC,gBAAQC,GAAR,CAAYP,EAAEC,MAAF,CAASO,KAArB;AACAf,eAAOO,EAAEC,MAAF,CAASO,KAAT,CAAeC,IAAtB;AACA,QAJD;AAKA,OA9BK,CAAP;AAgCA;;;mCAEqBC,Y,EACtB;AACC1B,aAAO2B,OAAP,CAEC,iBACA;AACC,WAAID,aAAaE,gBAAb,CAA8BC,QAA9B,CAAuCC,KAAvC,CAAJ,EACA;AACCJ,qBAAaK,iBAAb,CAA+BD,KAA/B;AACA;;AAEDJ,oBAAaM,iBAAb,CAAgCF,KAAhC,EAAuC,EAAEG,eAAgB,IAAlB,EAAvC;AACA,OAVF;AAYA;;;uCAGD;AACC,UAAI9B,UAAJ,EACA;AACCC;AACAD,oBAAa,IAAb;AACA;AACD;;;;;;;;AACD","file":"ConnectionFactory.js","sourcesContent":["const stores   = ['negociacoes'];\r\nconst version  = 4;\r\nconst dbname   = 'aluraframe';\r\n\r\nlet connection = null;\r\nlet close      = null;\r\n\r\nexport class ConnectionFactory\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tthrow new Error('Não é possível criar instancias de ConnectionFactory');\r\n\t}\r\n\r\n\tstatic getConnection()\r\n\t{\r\n\t\treturn new Promise\r\n\t\t(\r\n\t\t\t(resolve, reject) => \r\n\t\t\t{\r\n\t\t\t\tlet openRequest = window.indexedDB.open(dbname, version);\r\n\r\n\t\t\t\topenRequest.onupgradeneeded = e => \r\n\t\t\t\t{\r\n\t\t\t\t\tConnectionFactory._createStores( e.target.result );\t\r\n\t\t\t\t};\r\n\r\n\t\t\t\topenRequest.onsuccess = e =>\r\n\t\t\t\t{\r\n\t\t\t\t\tif( !connection ) \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconnection = e.target.result;\r\n\t\t\t\t\t\tclose = connection.close.bind(connection);\r\n\t\t\t\t\t\tconnection.close = function()\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthrow new Error('Você não pode fechar diretamente a conexão!');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolve(connection);\r\n\t\t\t\t};\r\n\r\n\t\t\t\topenRequest.onerror = e =>\r\n\t\t\t\t{\r\n\t\t\t\t\tconsole.log(e.target.error);\r\n\t\t\t\t\treject(e.target.error.name);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tstatic _createStores( p_connection )\r\n\t{\r\n\t\tstores.forEach\r\n\t\t(\r\n\t\t\tstore => \r\n\t\t\t{\r\n\t\t\t\tif( p_connection.objectStoreNames.contains(store) ) \r\n\t\t\t\t{\r\n\t\t\t\t\tp_connection.deleteObjectStore(store);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tp_connection.createObjectStore( store, { autoIncrement : true } );\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tstatic closeConnection()\r\n\t{\r\n\t\tif( connection )\r\n\t\t{\r\n\t\t\tclose();\r\n\t\t\tconnection = null;\r\n\t\t}\r\n\t}\r\n};"]}