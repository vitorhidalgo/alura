{"version":3,"sources":["../../app-es6/services/ConnectionFactory.js"],"names":["ConnectionFactory","stores","version","dbname","connection","close","Error","Promise","resolve","reject","openRequest","window","indexedDB","open","onupgradeneeded","_createStores","e","target","result","onsuccess","bind","onerror","console","log","error","name","p_connection","forEach","objectStoreNames","contains","store","deleteObjectStore","createObjectStore","autoIncrement"],"mappings":";;;;;;AAAA,IAAIA,oBAEH,YACA;AACC,KAAMC,SAAW,CAAC,aAAD,CAAjB;AACA,KAAMC,UAAW,CAAjB;AACA,KAAMC,SAAW,YAAjB;;AAEA,KAAIC,aAAa,IAAjB;AACA,KAAIC,QAAa,IAAjB;;AAEA;AAEC,+BACA;AAAA;;AACC,SAAM,IAAIC,KAAJ,CAAU,sDAAV,CAAN;AACA;;AALF;AAAA;AAAA,mCAQC;AACC,WAAO,IAAIC,OAAJ,CAEN,UAACC,OAAD,EAAUC,MAAV,EACA;AACC,SAAIC,cAAcC,OAAOC,SAAP,CAAiBC,IAAjB,CAAsBV,MAAtB,EAA8BD,OAA9B,CAAlB;;AAEAQ,iBAAYI,eAAZ,GAA8B,aAC9B;AACCd,wBAAkBe,aAAlB,CAAiCC,EAAEC,MAAF,CAASC,MAA1C;AACA,MAHD;;AAKAR,iBAAYS,SAAZ,GAAwB,aACxB;AACC,UAAI,CAACf,UAAL,EACA;AACCA,oBAAaY,EAAEC,MAAF,CAASC,MAAtB;AACAb,eAAQD,WAAWC,KAAX,CAAiBe,IAAjB,CAAsBhB,UAAtB,CAAR;AACAA,kBAAWC,KAAX,GAAmB,YACnB;AACC,cAAM,IAAIC,KAAJ,CAAU,6CAAV,CAAN;AACA,QAHD;AAIA;AACDE,cAAQJ,UAAR;AACA,MAZD;;AAcAM,iBAAYW,OAAZ,GAAsB,aACtB;AACCC,cAAQC,GAAR,CAAYP,EAAEC,MAAF,CAASO,KAArB;AACAf,aAAOO,EAAEC,MAAF,CAASO,KAAT,CAAeC,IAAtB;AACA,MAJD;AAKA,KA9BK,CAAP;AAgCA;AAzCF;AAAA;AAAA,iCA2CuBC,YA3CvB,EA4CC;AACCzB,WAAO0B,OAAP,CAEC,iBACA;AACC,SAAID,aAAaE,gBAAb,CAA8BC,QAA9B,CAAuCC,KAAvC,CAAJ,EACA;AACCJ,mBAAaK,iBAAb,CAA+BD,KAA/B;AACA;;AAEDJ,kBAAaM,iBAAb,CAAgCF,KAAhC,EAAuC,EAAEG,eAAgB,IAAlB,EAAvC;AACA,KAVF;AAYA;AAzDF;AAAA;AAAA,qCA4DC;AACC,QAAI7B,UAAJ,EACA;AACCC;AACAD,kBAAa,IAAb;AACA;AACD;AAlEF;;AAAA;AAAA;AAoEA,CA9EF,EADA","file":"ConnectionFactory.js","sourcesContent":["var ConnectionFactory = \r\n(\r\n\tfunction()\r\n\t{\r\n\t\tconst stores   = ['negociacoes'];\r\n\t\tconst version  = 4;\r\n\t\tconst dbname   = 'aluraframe';\r\n\t\t\r\n\t\tvar connection = null;\r\n\t\tvar close      = null;\r\n\r\n\t\treturn class ConnectionFactory\r\n\t\t{\r\n\t\t\tconstructor()\r\n\t\t\t{\r\n\t\t\t\tthrow new Error('Não é possível criar instancias de ConnectionFactory');\r\n\t\t\t}\r\n\r\n\t\t\tstatic getConnection()\r\n\t\t\t{\r\n\t\t\t\treturn new Promise\r\n\t\t\t\t(\r\n\t\t\t\t\t(resolve, reject) => \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlet openRequest = window.indexedDB.open(dbname, version);\r\n\r\n\t\t\t\t\t\topenRequest.onupgradeneeded = e => \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tConnectionFactory._createStores( e.target.result );\t\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\topenRequest.onsuccess = e =>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif( !connection ) \r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tconnection = e.target.result;\r\n\t\t\t\t\t\t\t\tclose = connection.close.bind(connection);\r\n\t\t\t\t\t\t\t\tconnection.close = function()\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tthrow new Error('Você não pode fechar diretamente a conexão!');\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tresolve(connection);\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\topenRequest.onerror = e =>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tconsole.log(e.target.error);\r\n\t\t\t\t\t\t\treject(e.target.error.name);\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tstatic _createStores( p_connection )\r\n\t\t\t{\r\n\t\t\t\tstores.forEach\r\n\t\t\t\t(\r\n\t\t\t\t\tstore => \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif( p_connection.objectStoreNames.contains(store) ) \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tp_connection.deleteObjectStore(store);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tp_connection.createObjectStore( store, { autoIncrement : true } );\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tstatic closeConnection()\r\n\t\t\t{\r\n\t\t\t\tif( connection )\r\n\t\t\t\t{\r\n\t\t\t\t\tclose();\r\n\t\t\t\t\tconnection = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n)();\r\n\r\n"]}